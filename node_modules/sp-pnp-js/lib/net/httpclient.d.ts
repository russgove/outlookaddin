export interface FetchOptions {
    method?: string;
    headers?: string[][] | {
        [key: string]: string;
    };
    body?: any;
    mode?: "navigate" | "same-origin" | "no-cors" | "cors";
    credentials?: "omit" | "same-origin" | "include";
    cache?: "default" | "no-store" | "reload" | "no-cache" | "force-cache" | "only-if-cached";
}
export declare class HttpClient {
    private _digestCache;
    private _impl;
    constructor();
    fetch(url: string, options?: FetchOptions): Promise<Response>;
    fetchRaw(url: string, options?: FetchOptions): Promise<Response>;
    get(url: string, options?: FetchOptions): Promise<Response>;
    post(url: string, options?: FetchOptions): Promise<Response>;
    patch(url: string, options?: FetchOptions): Promise<Response>;
    delete(url: string, options?: FetchOptions): Promise<Response>;
    private mergeHeaders(target, source);
}
export interface HttpClientImpl {
    fetch(url: string, options: FetchOptions): Promise<Response>;
}
