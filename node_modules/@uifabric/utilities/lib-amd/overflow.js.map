{"version":3,"sources":["overflow.ts"],"names":[],"mappings":";;;IAAA;;;;;OAKG;IACH,+BAAsC,OAAoB;QACxD,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IACnD,CAAC;IAFD,sDAEC;IAED;;;;;OAKG;IACH,6BAAoC,OAAoB;QACtD,MAAM,CAAC,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;IACrD,CAAC;IAFD,kDAEC;IAED;;;;;OAKG;IACH,qBAA4B,OAAoB;QAC9C,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,mBAAmB,CAAC,OAAO,CAAC,CAAC;IACxE,CAAC;IAFD,kCAEC","file":"overflow.js","sourcesContent":["/**\n * Detects whether an element's content has horizontal overflow\n *\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasHorizontalOverflow(element: HTMLElement): boolean {\n  return element.clientWidth < element.scrollWidth;\n}\n\n/**\n * Detects whether an element's content has vertical overflow\n *\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasVerticalOverflow(element: HTMLElement): boolean {\n  return element.clientHeight < element.scrollHeight;\n}\n\n/**\n * Detects whether an element's content has overflow in any direction\n *\n * @param element - Element to check for overflow\n * @returns True if element's content overflows\n */\nexport function hasOverflow(element: HTMLElement): boolean {\n  return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\n}"],"sourceRoot":"../src"}