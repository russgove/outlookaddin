{"version":3,"sources":["Async.ts"],"names":[],"mappings":"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","file":"Async.js","sourcesContent":["/**\n * Bugs often appear in async code when stuff gets disposed, but async operations don't get canceled.\n * This Async helper class solves these issues by tying async code to the lifetime of a disposable object.\n *\n * Usage: Anything class extending from BaseModel can access this helper via this.async. Otherwise create a\n * new instance of the class and remember to call dispose() during your code's dispose handler.\n */\n\ndeclare function setTimeout(cb: Function, delay: number): number;\ndeclare function setInterval(cb: Function, delay: number): number;\n\nexport class Async {\n  private _timeoutIds = null;\n  private _immediateIds = null;\n  private _intervalIds = null;\n  private _animationFrameIds: { [id: number]: boolean } = null;\n  private _isDisposed = false;\n  private _parent: any;\n  private _onErrorHandler: (e: any) => void;\n  private _noop: any;\n\n  constructor(parent?: any, onError?: (e: any) => void) {\n    this._parent = parent || null;\n    this._onErrorHandler = onError;\n    this._noop = () => { /* do nothing */ };\n  }\n\n  /**\n   * Dispose function, clears all async operations.\n   */\n  public dispose() {\n    let id;\n\n    this._isDisposed = true;\n    this._parent = null;\n\n    // Clear timeouts.\n    if (this._timeoutIds) {\n      for (id in this._timeoutIds) {\n        if (this._timeoutIds.hasOwnProperty(id)) {\n          this.clearTimeout(id);\n        }\n      }\n\n      this._timeoutIds = null;\n    }\n\n    // Clear immediates.\n    if (this._immediateIds) {\n      for (id in this._immediateIds) {\n        if (this._immediateIds.hasOwnProperty(id)) {\n          this.clearImmediate(id);\n        }\n      }\n\n      this._immediateIds = null;\n    }\n\n    // Clear intervals.\n    if (this._intervalIds) {\n      for (id in this._intervalIds) {\n        if (this._intervalIds.hasOwnProperty(id)) {\n          this.clearInterval(id);\n        }\n      }\n      this._intervalIds = null;\n    }\n\n    // Clear animation frames.\n    if (this._animationFrameIds) {\n      for (id in this._animationFrameIds) {\n        if (this._animationFrameIds.hasOwnProperty(id)) {\n          this.cancelAnimationFrame(id);\n        }\n      }\n\n      this._animationFrameIds = null;\n    }\n  }\n\n  /**\n   * SetTimeout override, which will auto cancel the timeout during dispose.\n   * @param callback - Callback to execute.\n   * @param duration - Duration in milliseconds.\n   * @returns The setTimeout id.\n   */\n  public setTimeout(callback: () => void, duration: number): number {\n\n    let timeoutId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._timeoutIds) {\n        this._timeoutIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      timeoutId = setTimeout(\n        () => {\n          // Time to execute the timeout, enqueue it as a foreground task to be executed.\n\n          try {\n            // Now delete the record and call the callback.\n            delete this._timeoutIds[timeoutId];\n            callback.apply(this._parent);\n          } catch (e) {\n            if (this._onErrorHandler) {\n              this._onErrorHandler(e);\n            }\n          }\n        },\n        duration);\n      /* tslint:enable:ban-native-functions */\n\n      this._timeoutIds[timeoutId] = true;\n    }\n\n    return timeoutId;\n  }\n\n  /**\n   * Clears the timeout.\n   * @param id - Id to cancel.\n   */\n  public clearTimeout(id: number): void {\n\n    if (this._timeoutIds && this._timeoutIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      clearTimeout(id);\n      delete this._timeoutIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * SetImmediate override, which will auto cancel the immediate during dispose.\n   * @param callback - Callback to execute.\n   * @returns The setTimeout id.\n   */\n  public setImmediate(callback: () => void): number {\n\n    let immediateId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._immediateIds) {\n        this._immediateIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      let setImmediateCallback = () => {\n        // Time to execute the timeout, enqueue it as a foreground task to be executed.\n\n        try {\n          // Now delete the record and call the callback.\n          delete this._immediateIds[immediateId];\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      };\n\n      immediateId = window.setImmediate ? window.setImmediate(setImmediateCallback) : window.setTimeout(setImmediateCallback, 0);\n      /* tslint:enable:ban-native-functions */\n\n      this._immediateIds[immediateId] = true;\n    }\n\n    return immediateId;\n  }\n\n  /**\n   * Clears the immediate.\n   * @param id - Id to cancel.\n   */\n  public clearImmediate(id: number) {\n\n    if (this._immediateIds && this._immediateIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      window.clearImmediate ? window.clearImmediate(id) : window.clearTimeout(id);\n      delete this._immediateIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * SetInterval override, which will auto cancel the timeout during dispose.\n   * @param callback - Callback to execute.\n   * @param duration - Duration in milliseconds.\n   * @returns The setTimeout id.\n   */\n  public setInterval(callback: () => void, duration: number): number {\n    let intervalId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._intervalIds) {\n        this._intervalIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      intervalId = setInterval(\n        () => {\n          // Time to execute the interval callback, enqueue it as a foreground task to be executed.\n          try {\n            callback.apply(this._parent);\n          } catch (e) {\n            this._logError(e);\n          }\n        },\n        duration);\n      /* tslint:enable:ban-native-functions */\n\n      this._intervalIds[intervalId] = true;\n    }\n\n    return intervalId;\n  }\n\n  /**\n   * Clears the interval.\n   * @param id - Id to cancel.\n   */\n  public clearInterval(id: number) {\n    if (this._intervalIds && this._intervalIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      clearInterval(id);\n      delete this._intervalIds[id];\n      /* tslint:enable:ban-native-functions */\n    }\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the func function at most once per\n   * every wait milliseconds. Provide an options object to indicate that func should be invoked\n   * on the leading and/or trailing edge of the wait timeout. Subsequent calls to the throttled\n   * function will return the result of the last func call.\n   *\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\n   * the timeout only if the the throttled function is invoked more than once during the wait timeout.\n   *\n   * @param func - The function to throttle.\n   * @param wait - The number of milliseconds to throttle executions to. Defaults to 0.\n   * @param options - The options object.\n   * @returns The new throttled function.\n   */\n  public throttle<T extends Function>(func: T, wait?: number, options?: {\n    leading?: boolean;\n    trailing?: boolean;\n  }): T {\n\n    if (this._isDisposed) {\n      return this._noop;\n    }\n\n    let waitMS = wait || 0;\n    let leading = true;\n    let trailing = true;\n    let lastExecuteTime = 0;\n    let lastResult;\n    let lastArgs: any[];\n    let timeoutId: number = null;\n\n    if (options && typeof (options.leading) === 'boolean') {\n      leading = options.leading;\n    }\n\n    if (options && typeof (options.trailing) === 'boolean') {\n      trailing = options.trailing;\n    }\n\n    let callback = (userCall?: boolean) => {\n      let now = (new Date).getTime();\n      let delta = now - lastExecuteTime;\n      let waitLength = leading ? waitMS - delta : waitMS;\n      if (delta >= waitMS && (!userCall || leading)) {\n        lastExecuteTime = now;\n        if (timeoutId) {\n          this.clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        lastResult = func.apply(this._parent, lastArgs);\n      } else if (timeoutId === null && trailing) {\n        timeoutId = this.setTimeout(callback, waitLength);\n      }\n\n      return lastResult;\n    };\n\n    let resultFunction: any = (...args: any[]) => {\n      lastArgs = args;\n      return callback(true);\n    };\n\n    return resultFunction;\n  }\n\n  /**\n   * Creates a function that will delay the execution of func until after wait milliseconds have\n   * elapsed since the last time it was invoked. Provide an options object to indicate that func\n   * should be invoked on the leading and/or trailing edge of the wait timeout. Subsequent calls\n   * to the debounced function will return the result of the last func call.\n   *\n   * Note: If leading and trailing options are true func will be called on the trailing edge of\n   * the timeout only if the the debounced function is invoked more than once during the wait\n   * timeout.\n   *\n   * @param func - The function to debounce.\n   * @param wait - The number of milliseconds to delay.\n   * @param options - The options object.\n   * @returns The new debounced function.\n   */\n  public debounce<T extends Function>(func: T, wait?: number, options?: {\n    leading?: boolean;\n    maxWait?: number;\n    trailing?: boolean;\n  }): T {\n\n    if (this._isDisposed) {\n      return this._noop;\n    }\n\n    let waitMS = wait || 0;\n    let leading = false;\n    let trailing = true;\n    let maxWait = null;\n    let lastCallTime = 0;\n    let lastExecuteTime = (new Date).getTime();\n    let lastResult;\n    let lastArgs: any[];\n    let timeoutId: number = null;\n\n    if (options && typeof (options.leading) === 'boolean') {\n      leading = options.leading;\n    }\n\n    if (options && typeof (options.trailing) === 'boolean') {\n      trailing = options.trailing;\n    }\n\n    if (options && typeof (options.maxWait) === 'number' && !isNaN(options.maxWait)) {\n      maxWait = options.maxWait;\n    }\n\n    let callback = (userCall?: boolean) => {\n      let now = (new Date).getTime();\n      let executeImmediately = false;\n      if (userCall) {\n        if (leading && now - lastCallTime >= waitMS) {\n          executeImmediately = true;\n        }\n        lastCallTime = now;\n      }\n      let delta = now - lastCallTime;\n      let waitLength = waitMS - delta;\n      let maxWaitDelta = now - lastExecuteTime;\n      let maxWaitExpired = false;\n\n      if (maxWait !== null) {\n        // maxWait only matters when there is a pending callback\n        if (maxWaitDelta >= maxWait && timeoutId) {\n          maxWaitExpired = true;\n        } else {\n          waitLength = Math.min(waitLength, maxWait - maxWaitDelta);\n        }\n      }\n\n      if (delta >= waitMS || maxWaitExpired || executeImmediately) {\n        if (timeoutId) {\n          this.clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n        lastExecuteTime = now;\n        lastResult = func.apply(this._parent, lastArgs);\n      } else if ((timeoutId === null || !userCall) && trailing) {\n        timeoutId = this.setTimeout(callback, waitLength);\n      }\n\n      return lastResult;\n    };\n\n    let resultFunction: any = (...args: any[]) => {\n      lastArgs = args;\n      return callback(true);\n    };\n\n    return resultFunction;\n  }\n\n  public requestAnimationFrame(callback: () => void): number {\n    let animationFrameId = 0;\n\n    if (!this._isDisposed) {\n      if (!this._animationFrameIds) {\n        this._animationFrameIds = {};\n      }\n\n      /* tslint:disable:ban-native-functions */\n      let animationFrameCallback = () => {\n        try {\n          // Now delete the record and call the callback.\n          delete this._animationFrameIds[animationFrameId];\n          callback.apply(this._parent);\n        } catch (e) {\n          this._logError(e);\n        }\n      };\n\n      animationFrameId = window.requestAnimationFrame ?\n        window.requestAnimationFrame(animationFrameCallback) :\n        window.setTimeout(animationFrameCallback, 0);\n      /* tslint:enable:ban-native-functions */\n\n      this._animationFrameIds[animationFrameId] = true;\n    }\n\n    return animationFrameId;\n  }\n\n  public cancelAnimationFrame(id: number) {\n    if (this._animationFrameIds && this._animationFrameIds[id]) {\n      /* tslint:disable:ban-native-functions */\n      window.cancelAnimationFrame ? window.cancelAnimationFrame(id) : window.clearTimeout(id);\n      /* tslint:enable:ban-native-functions */\n      delete this._animationFrameIds[id];\n    }\n  }\n\n  protected _logError(e: any) {\n    if (this._onErrorHandler) {\n      this._onErrorHandler(e);\n    }\n  }\n}\n"],"sourceRoot":"../src"}