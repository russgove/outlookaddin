{"version":3,"sources":["autobind.ts"],"names":[],"mappings":";;;IAAA;;;OAGG;IACH,kBAA6C,MAAW,EAAE,GAAW,EAAE,UAAsC;QAC3G,IAAI,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC;QAE1B,IAAI,QAAQ,GAAG,KAAK,CAAC;QAErB,MAAM,CAAC;YACL,YAAY,EAAE,IAAI;YAElB,GAAG;gBACD,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,KAAK,EAAE,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAClE,MAAM,CAAC,EAAE,CAAC;gBACZ,CAAC;gBAED,uFAAuF;gBACvF,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE5B,QAAQ,GAAG,IAAI,CAAC;gBAChB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;oBAC/B,YAAY,EAAE,IAAI;oBAClB,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE,IAAI;oBAChB,KAAK,EAAE,OAAO;iBACf,CAAC,CAAC;gBACH,QAAQ,GAAG,KAAK,CAAC;gBAEjB,MAAM,CAAC,OAAO,CAAC;YACjB,CAAC;YAED,GAAG,YAAC,QAAQ;gBACV,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;oBAC/B,YAAY,EAAE,IAAI;oBAClB,QAAQ,EAAE,IAAI;oBACd,UAAU,EAAE,IAAI;oBAChB,KAAK,EAAE,QAAQ;iBAChB,CAAC,CAAC;YACL,CAAC;SACF,CAAC;IACJ,CAAC;IArCD,4BAqCC","file":"autobind.js","sourcesContent":["/**\n * Autobind is a utility for binding methods in a class. This simplifies tagging methods as being \"bound\" to the this pointer\n * so that they can be used in scenarios that simply require a function callback.\n */\nexport function autobind<T extends Function>(target: any, key: string, descriptor: TypedPropertyDescriptor<T>) {\n  let fn = descriptor.value;\n\n  let defining = false;\n\n  return {\n    configurable: true,\n\n    get() {\n      if (defining || this === fn.prototype || this.hasOwnProperty(key)) {\n        return fn;\n      }\n\n      // Bind method only once, and update the property to return the bound value from now on\n      let fnBound = fn.bind(this);\n\n      defining = true;\n      Object.defineProperty(this, key, {\n        configurable: true,\n        writable: true,\n        enumerable: true,\n        value: fnBound\n      });\n      defining = false;\n\n      return fnBound;\n    },\n\n    set(newValue) {\n      Object.defineProperty(this, key, {\n        configurable: true,\n        writable: true,\n        enumerable: true,\n        value: newValue\n      });\n    }\n  };\n}\n"],"sourceRoot":"../src"}