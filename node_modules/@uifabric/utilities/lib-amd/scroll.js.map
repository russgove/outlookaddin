{"version":3,"sources":["scroll.ts"],"names":[],"mappings":"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","file":"scroll.js","sourcesContent":["import { getDocument } from './dom';\nimport styles from './scroll.scss';\n\nlet _scrollbarWidth: number;\nlet _bodyScrollDisabledCount = 0;\n\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\n\nexport function disableBodyScroll() {\n  let doc = getDocument();\n\n  if (doc && doc.body && !_bodyScrollDisabledCount) {\n    doc.body.classList.add(styles.msFabricScrollDisabled);\n  }\n\n  _bodyScrollDisabledCount++;\n}\n\nexport function enableBodyScroll() {\n  if (_bodyScrollDisabledCount > 0) {\n    let doc = getDocument();\n\n    if (doc && doc.body && _bodyScrollDisabledCount === 1) {\n      doc.body.classList.remove(styles.msFabricScrollDisabled);\n    }\n\n    _bodyScrollDisabledCount--;\n  }\n}\n\n/** Calculates the width of a scrollbar for the browser/os. */\nexport function getScrollbarWidth(): number {\n  if (_scrollbarWidth === undefined) {\n    let scrollDiv: HTMLElement = document.createElement('div');\n    scrollDiv.style.setProperty('width', '100px');\n    scrollDiv.style.setProperty('height', '100px');\n    scrollDiv.style.setProperty('overflow', 'scroll');\n    scrollDiv.style.setProperty('position', 'absolute');\n    scrollDiv.style.setProperty('top', '-9999px');\n    document.body.appendChild(scrollDiv);\n    // Get the scrollbar width\n    _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    document.body.removeChild(scrollDiv);\n  }\n\n  return _scrollbarWidth;\n}\n\n/**\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns\n * document.body.\n */\nexport function findScrollableParent(startingElement: HTMLElement): HTMLElement {\n  let el = startingElement;\n\n  // First do a quick scan for the scrollable attribute.\n  while (el && el !== document.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\n      return el;\n    }\n    el = el.parentElement;\n  }\n\n  // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.\n  el = startingElement;\n\n  while (el && el !== document.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\n      const styles = getComputedStyle(el);\n      let overflowY = styles ? styles.getPropertyValue('overflow-y') : '';\n\n      if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\n        return el;\n      }\n    }\n\n    el = el.parentElement;\n  }\n\n  // Fall back to window scroll.\n  if (!el || el === document.body) {\n    el = window as any;\n  }\n\n  return el;\n}"],"sourceRoot":"../src"}