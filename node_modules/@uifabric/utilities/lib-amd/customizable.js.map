{"version":3,"sources":["customizable.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;IAEA,sBAAgC,aAAsB;QACpD,MAAM,CAAC,6BACL,iBAA4E;YAE5E,MAAM;oBAA0C,8CAAsB;oBAA/D;;oBAcP,CAAC;oBATQ,2CAAM,GAAb;wBACE,IAAI,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;4BAC9C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC;4BACzC,IAAI,CAAC,IAAI,EAAE,CAAC;wBAEd,MAAM,CAAC,CACL,oBAAC,iBAAiB,eAAM,YAAY,EAAQ,IAAI,CAAC,KAAK,EAAK,CAC5D,CAAC;oBACJ,CAAC;oBACH,iCAAC;gBAAD,CAdO,AAcN,CAd+C,KAAK,CAAC,SAAS;gBAC/C,eAAY,GAAG;oBAC3B,aAAa,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;iBACrC;mBAWF;;QACJ,CAAC,CAAC;IACJ,CAAC;IApBD,oCAoBC","file":"customizable.js","sourcesContent":["import * as React from 'react';\n\nexport function customizable<P>(componentName?: string) {\n  return function customizableFactory<P, S>(\n    ComposedComponent: (new (props: P, ...args: any[]) => React.Component<P, S>)\n  ): any {\n    return class ComponentWithInjectedProps extends React.Component<P, {}> {\n      public static contextTypes = {\n        injectedProps: React.PropTypes.object\n      };\n\n      public render() {\n        let defaultProps = ((this.context.injectedProps) ?\n          this.context.injectedProps[componentName] :\n          null) || {};\n\n        return (\n          <ComposedComponent { ...defaultProps } { ...this.props } />\n        );\n      }\n    };\n  };\n}\n"],"sourceRoot":"../src"}