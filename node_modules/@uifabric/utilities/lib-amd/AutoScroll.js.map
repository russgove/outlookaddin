{"version":3,"sources":["AutoScroll.ts"],"names":[],"mappings":"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","file":"AutoScroll.js","sourcesContent":["import { EventGroup } from './EventGroup';\nimport { findScrollableParent } from './scroll';\nimport { getRect } from './dom';\nimport { IRectangle } from './IRectangle';\n\ndeclare function setTimeout(cb: Function, delay: number): number;\n\nconst SCROLL_ITERATION_DELAY = 16;\nconst SCROLL_GUTTER_HEIGHT = 100;\nconst MAX_SCROLL_VELOCITY = 15;\n\n/**\n * AutoScroll simply hooks up mouse events given a parent element, and scrolls the container\n * up/down depending on how close the mouse is to the top/bottom of the container.\n *\n * Once you don't want autoscroll any more, just dispose the helper and it will unhook events.\n */\nexport class AutoScroll {\n  private _events: EventGroup;\n  private _scrollableParent: HTMLElement;\n  private _scrollRect: IRectangle;\n  private _scrollVelocity: number;\n  private _timeoutId: number;\n\n  constructor(element: HTMLElement) {\n    this._events = new EventGroup(this);\n    this._scrollableParent = findScrollableParent(element);\n\n    this._incrementScroll = this._incrementScroll.bind(this);\n    this._scrollRect = getRect(this._scrollableParent);\n\n    if (this._scrollableParent === window as any) {\n      this._scrollableParent = document.body;\n    }\n\n    if (this._scrollableParent) {\n      this._events.on(window, 'mousemove', this._onMouseMove, true);\n      this._events.on(window, 'touchmove', this._onTouchMove, true);\n    }\n  }\n\n  public dispose() {\n    this._events.dispose();\n    this._stopScroll();\n  }\n\n  private _onMouseMove(ev: MouseEvent) {\n    this._computeScrollVelocity(ev.clientY);\n  }\n\n  private _onTouchMove(ev: TouchEvent) {\n    if (ev.touches.length > 0) {\n      this._computeScrollVelocity(ev.touches[0].clientY);\n    }\n  }\n\n  private _computeScrollVelocity(clientY: number) {\n    let scrollRectTop = this._scrollRect.top;\n    let scrollClientBottom = scrollRectTop + this._scrollRect.height - SCROLL_GUTTER_HEIGHT;\n\n    if (clientY < (scrollRectTop + SCROLL_GUTTER_HEIGHT)) {\n      this._scrollVelocity = Math.max(\n        -MAX_SCROLL_VELOCITY,\n        -MAX_SCROLL_VELOCITY * ((SCROLL_GUTTER_HEIGHT - (clientY - scrollRectTop)) / SCROLL_GUTTER_HEIGHT\n        ));\n    } else if (clientY > scrollClientBottom) {\n      this._scrollVelocity = Math.min(\n        MAX_SCROLL_VELOCITY,\n        MAX_SCROLL_VELOCITY * ((clientY - scrollClientBottom) / SCROLL_GUTTER_HEIGHT\n        ));\n    } else {\n      this._scrollVelocity = 0;\n    }\n\n    if (this._scrollVelocity) {\n      this._startScroll();\n    } else {\n      this._stopScroll();\n    }\n  }\n\n  private _startScroll() {\n    if (!this._timeoutId) {\n      this._incrementScroll();\n    }\n  }\n\n  private _incrementScroll() {\n    this._scrollableParent.scrollTop += Math.round(this._scrollVelocity);\n    this._timeoutId = setTimeout(this._incrementScroll, SCROLL_ITERATION_DELAY);\n  }\n\n  private _stopScroll() {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n      delete this._timeoutId;\n    }\n  }\n}"],"sourceRoot":"../src"}