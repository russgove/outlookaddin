{"version":3,"sources":["scroll.ts"],"names":[],"mappings":"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","file":"scroll.js","sourcesContent":["import { getDocument } from './dom';\nimport styles from './scroll.scss';\n\nlet _scrollbarWidth: number;\nlet _bodyScrollDisabledCount = 0;\n\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\n\nexport function disableBodyScroll() {\n  let doc = getDocument();\n\n  if (doc && doc.body && !_bodyScrollDisabledCount) {\n    doc.body.classList.add(styles.msFabricScrollDisabled);\n  }\n\n  _bodyScrollDisabledCount++;\n}\n\nexport function enableBodyScroll() {\n  if (_bodyScrollDisabledCount > 0) {\n    let doc = getDocument();\n\n    if (doc && doc.body && _bodyScrollDisabledCount === 1) {\n      doc.body.classList.remove(styles.msFabricScrollDisabled);\n    }\n\n    _bodyScrollDisabledCount--;\n  }\n}\n\n/** Calculates the width of a scrollbar for the browser/os. */\nexport function getScrollbarWidth(): number {\n  if (_scrollbarWidth === undefined) {\n    let scrollDiv: HTMLElement = document.createElement('div');\n    scrollDiv.style.setProperty('width', '100px');\n    scrollDiv.style.setProperty('height', '100px');\n    scrollDiv.style.setProperty('overflow', 'scroll');\n    scrollDiv.style.setProperty('position', 'absolute');\n    scrollDiv.style.setProperty('top', '-9999px');\n    document.body.appendChild(scrollDiv);\n    // Get the scrollbar width\n    _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    document.body.removeChild(scrollDiv);\n  }\n\n  return _scrollbarWidth;\n}\n\n/**\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns\n * document.body.\n */\nexport function findScrollableParent(startingElement: HTMLElement): HTMLElement {\n  let el = startingElement;\n\n  // First do a quick scan for the scrollable attribute.\n  while (el && el !== document.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\n      return el;\n    }\n    el = el.parentElement;\n  }\n\n  // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.\n  el = startingElement;\n\n  while (el && el !== document.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\n      const styles = getComputedStyle(el);\n      let overflowY = styles ? styles.getPropertyValue('overflow-y') : '';\n\n      if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\n        return el;\n      }\n    }\n\n    el = el.parentElement;\n  }\n\n  // Fall back to window scroll.\n  if (!el || el === document.body) {\n    el = window as any;\n  }\n\n  return el;\n}"],"sourceRoot":"../src"}