{"version":3,"sources":["autobind.ts"],"names":[],"mappings":";;AAAA;;;GAGG;AACH,kBAA6C,MAAW,EAAE,GAAW,EAAE,UAAsC;IAC3G,IAAI,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC;IAE1B,IAAI,QAAQ,GAAG,KAAK,CAAC;IAErB,MAAM,CAAC;QACL,YAAY,EAAE,IAAI;QAElB,GAAG;YACD,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,KAAK,EAAE,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClE,MAAM,CAAC,EAAE,CAAC;YACZ,CAAC;YAED,uFAAuF;YACvF,IAAI,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE5B,QAAQ,GAAG,IAAI,CAAC;YAChB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;gBAC/B,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,OAAO;aACf,CAAC,CAAC;YACH,QAAQ,GAAG,KAAK,CAAC;YAEjB,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC;QAED,GAAG,YAAC,QAAQ;YACV,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE;gBAC/B,YAAY,EAAE,IAAI;gBAClB,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,QAAQ;aAChB,CAAC,CAAC;QACL,CAAC;KACF,CAAC;AACJ,CAAC;AArCD,4BAqCC","file":"autobind.js","sourcesContent":["/**\n * Autobind is a utility for binding methods in a class. This simplifies tagging methods as being \"bound\" to the this pointer\n * so that they can be used in scenarios that simply require a function callback.\n */\nexport function autobind<T extends Function>(target: any, key: string, descriptor: TypedPropertyDescriptor<T>) {\n  let fn = descriptor.value;\n\n  let defining = false;\n\n  return {\n    configurable: true,\n\n    get() {\n      if (defining || this === fn.prototype || this.hasOwnProperty(key)) {\n        return fn;\n      }\n\n      // Bind method only once, and update the property to return the bound value from now on\n      let fnBound = fn.bind(this);\n\n      defining = true;\n      Object.defineProperty(this, key, {\n        configurable: true,\n        writable: true,\n        enumerable: true,\n        value: fnBound\n      });\n      defining = false;\n\n      return fnBound;\n    },\n\n    set(newValue) {\n      Object.defineProperty(this, key, {\n        configurable: true,\n        writable: true,\n        enumerable: true,\n        value: newValue\n      });\n    }\n  };\n}\n"],"sourceRoot":"../src"}