{"version":3,"sources":["DelayedRender.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAgB/B;;;;GAIG;AACH;IAAmC,iCAAyD;IAO1F,uBAAY,KAA0B;QAAtC,YACE,kBAAM,KAAK,CAAC,SAIb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,KAAK;SAClB,CAAC;;IACJ,CAAC;IAEM,yCAAiB,GAAxB;QAAA,iBAOC;QANO,IAAA,wBAAK,CAAgB;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC3B,KAAI,CAAC,QAAQ,CAAC;gBACZ,UAAU,EAAE,IAAI;aACjB,CAAC,CAAC;QACL,CAAC,EAAE,KAAK,CAAC,CAAC;IACZ,CAAC;IAEM,4CAAoB,GAA3B;QACE,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAEM,8BAAM,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;IACjF,CAAC;IACH,oBAAC;AAAD,CA9BA,AA8BC,CA9BkC,KAAK,CAAC,SAAS;AAClC,0BAAY,GAAG;IAC3B,KAAK,EAAE,CAAC;CACT,CAAC;AAHS,sCAAa","file":"DelayedRender.js","sourcesContent":["import * as React from 'react';\n\nexport interface IDelayedRenderProps extends React.Props<any> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0\n  };\n\n  private _timeoutId;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: false\n    };\n  }\n\n  public componentDidMount() {\n    let { delay } = this.props;\n    this._timeoutId = setTimeout(() => {\n      this.setState({\n        isRendered: true\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this._timeoutId);\n  }\n\n  public render() {\n    return this.state.isRendered ? React.Children.only(this.props.children) : null;\n  }\n}\n"],"sourceRoot":"../src"}