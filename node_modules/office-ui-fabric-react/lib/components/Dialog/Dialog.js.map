{"version":3,"sources":["components/Dialog/Dialog.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,6BAA+B;AAC/B,6CAIyB;AACzB,+CAA0D;AAC1D,qCAAoC;AACpC,oFAAmF;AACnF,4CAA8C;AAC9C,IAAM,MAAM,GAAQ,YAAY,CAAC;AAEjC,iDAAgD;AAOhD,IAAa,MAAM;IAAS,0BAAyC;IAanE,gBAAY,KAAmB;QAA/B,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,EAAE,EAAE,iBAAK,CAAC,QAAQ,CAAC;SACpB,CAAC;;IACJ,CAAC;IAEM,uBAAM,GAAb;QACM,IAAA,eAmBU,EAlBZ,oDAAuB,EACvB,kDAAsB,EACtB,8CAAoB,EACpB,kDAAsB,EACtB,0BAAU,EACV,4DAA2B,EAC3B,gCAAa,EACb,kBAAM,EACN,wBAAS,EACT,4BAAW,EACX,oCAAe,EACf,kCAAc,EACd,kCAAc,EACd,oBAAO,EACP,gBAAK,EACL,cAAI,EACJ,sCAAgB,EAChB,oCAAe,CACF;QACT,IAAA,kBAAE,CAAgB;QAExB,IAAM,eAAe,GAAG,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;YAC9C,GAAC,sBAAsB,GAAG,MAAM,CAAC,aAAa,IAAG,IAAI,KAAK,yBAAU,CAAC,WAAW;YAChF,GAAC,mBAAmB,GAAG,MAAM,CAAC,OAAO,IAAG,IAAI,KAAK,yBAAU,CAAC,KAAK;gBACjE,CAAC;QACH,IAAM,kBAAkB,GAAG,eAAG,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QAE3E,MAAM,CAAC,CACL,oBAAC,aAAK,IACJ,SAAS,EAAG,eAAe,EAC3B,kBAAkB,EAAG,kBAAkB,EACvC,uBAAuB,EAAG,uBAAuB,EACjD,sBAAsB,EAAG,sBAAsB,EAC/C,oBAAoB,EAAG,oBAAoB,EAC3C,sBAAsB,EAAG,sBAAsB,EAC/C,UAAU,EAAG,UAAU,EACvB,2BAA2B,EAAG,2BAA2B,EACzD,aAAa,EAAG,aAAa,EAC7B,MAAM,EAAG,MAAM,EACf,SAAS,EAAG,SAAS,EACrB,WAAW,EAAG,WAAW,EACzB,eAAe,EAAG,eAAe,EACjC,cAAc,EAAG,cAAc,EAC/B,cAAc,EAAG,OAAO,IAAI,EAAE,GAAG,UAAU,EAC3C,WAAW,EAAG,KAAK,IAAI,EAAE,GAAG,QAAQ;YAGpC,oBAAC,6BAAa,IACZ,SAAS,EAAG,SAAS,EACrB,eAAe,EAAG,CAAC,UAAU,IAAI,IAAI,KAAK,yBAAU,CAAC,WAAW,EAChE,KAAK,EAAG,KAAK,EACb,OAAO,EAAG,OAAO,EACjB,SAAS,EAAG,gBAAgB,EAC5B,eAAe,EAAG,eAAe,IAE/B,IAAI,CAAC,KAAK,CAAC,QAAQ,CACP,CAEV,CACT,CAAC;;IACJ,CAAC;IACH,aAAC;AAAD,CApFA,AAoFC,CApF2B,yBAAa,GAoFxC;AAlFe,mBAAY,GAAiB;IACzC,MAAM,EAAE,KAAK;IACb,IAAI,EAAE,yBAAU,CAAC,MAAM;IACvB,aAAa,EAAE,IAAI;IACnB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,EAAE;IACb,kBAAkB,EAAE,EAAE;IACtB,gBAAgB,EAAE,EAAE;IACpB,eAAe,EAAE,EAAE;CACpB,CAAC;AAXS,MAAM;IADlB,uCAAkB;GACN,MAAM,CAoFlB;AApFY,wBAAM","file":"components/Dialog/Dialog.js","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  css,\r\n  getId\r\n} from '../../Utilities';\r\nimport { IDialogProps, DialogType } from './Dialog.Props';\r\nimport { Modal } from '../../Modal';\r\nimport { withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\nimport * as stylesImport from './Dialog.scss';\r\nconst styles: any = stylesImport;\r\n\r\nimport { DialogContent } from './DialogContent';\r\n\r\nexport interface IDialogState {\r\n  id?: string;\r\n}\r\n\r\n@withResponsiveMode\r\nexport class Dialog extends BaseComponent<IDialogProps, IDialogState> {\r\n\r\n  public static defaultProps: IDialogProps = {\r\n    isOpen: false,\r\n    type: DialogType.normal,\r\n    isDarkOverlay: true,\r\n    isBlocking: false,\r\n    className: '',\r\n    containerClassName: '',\r\n    contentClassName: '',\r\n    topButtonsProps: []\r\n  };\r\n\r\n  constructor(props: IDialogProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: getId('Dialog'),\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    let {\r\n      elementToFocusOnDismiss,\r\n      firstFocusableSelector,\r\n      forceFocusInsideTrap,\r\n      ignoreExternalFocusing,\r\n      isBlocking,\r\n      isClickableOutsideFocusTrap,\r\n      isDarkOverlay,\r\n      isOpen,\r\n      onDismiss,\r\n      onDismissed,\r\n      onLayerDidMount,\r\n      onLayerMounted,\r\n      responsiveMode,\r\n      subText,\r\n      title,\r\n      type,\r\n      contentClassName,\r\n      topButtonsProps\r\n    } = this.props;\r\n    let { id } = this.state;\r\n\r\n    const dialogClassName = css(this.props.className, {\r\n      ['ms-Dialog--lgHeader ' + styles.isLargeHeader]: type === DialogType.largeHeader,\r\n      ['ms-Dialog--close ' + styles.isClose]: type === DialogType.close,\r\n    });\r\n    const containerClassName = css(this.props.containerClassName, styles.main);\r\n\r\n    return (\r\n      <Modal\r\n        className={ dialogClassName }\r\n        containerClassName={ containerClassName }\r\n        elementToFocusOnDismiss={ elementToFocusOnDismiss }\r\n        firstFocusableSelector={ firstFocusableSelector }\r\n        forceFocusInsideTrap={ forceFocusInsideTrap }\r\n        ignoreExternalFocusing={ ignoreExternalFocusing }\r\n        isBlocking={ isBlocking }\r\n        isClickableOutsideFocusTrap={ isClickableOutsideFocusTrap }\r\n        isDarkOverlay={ isDarkOverlay }\r\n        isOpen={ isOpen }\r\n        onDismiss={ onDismiss }\r\n        onDismissed={ onDismissed }\r\n        onLayerDidMount={ onLayerDidMount }\r\n        responsiveMode={ responsiveMode }\r\n        subtitleAriaId={ subText && id + '-subText' }\r\n        titleAriaId={ title && id + '-title' }\r\n      >\r\n\r\n        <DialogContent\r\n          onDismiss={ onDismiss }\r\n          showCloseButton={ !isBlocking && type !== DialogType.largeHeader }\r\n          title={ title }\r\n          subText={ subText }\r\n          className={ contentClassName }\r\n          topButtonsProps={ topButtonsProps }\r\n        >\r\n          { this.props.children }\r\n        </DialogContent>\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}